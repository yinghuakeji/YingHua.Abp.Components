@using  System.Globalization
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@using Syncfusion.Blazor.DropDowns

    <div style="padding-left:20px">
            <SfDropDownList TValue="string" TItem="Cultures" DataSource="@CultureList" Width="143px" Index="@cultureIndex"   PopupWidth="143px" CssClass="localization-combo">
        <DropDownListEvents TItem="Cultures" TValue="string" ValueChange="OnSelected"></DropDownListEvents>
        <DropDownListFieldSettings Value="Code" Text="Text"></DropDownListFieldSettings>
    </SfDropDownList>
    </div>
    <style>
.localization-combo {
        border-radius: 4px;
        border-color: #B3B3B3;
        font-family: OpenSans-Regular;
        font-size: 12px;
        background-color: #FFFFFF;
        border-width: 1px;
        color: #333333;
    }
  </style>

@code {
    private int cultureIndex { get; set; }
    protected override async Task OnInitializedAsync()
    {
                await base.OnInitializedAsync();
        switch (System.Globalization.CultureInfo.CurrentCulture.Name)
        {
            case "en-US":
                this.cultureIndex = 0;
                break;
            case "de":
                this.cultureIndex = 1;
                break;
            case "fr":
                this.cultureIndex = 2;
                break;
            case "ar":
                this.cultureIndex = 3;
                break;
            case "zh":
                this.cultureIndex = 4;
                break;
        }

    }
    private CultureInfo[] supportedCultures = new[]
   {
        new CultureInfo("en-US"),
        new CultureInfo("de"),
        new CultureInfo("ar"),
        new CultureInfo("fr"),
        new CultureInfo("zh")
    };

     private CultureInfo Culture
    {
                get => CultureInfo.CurrentCulture;
                set
                {
                    if (CultureInfo.CurrentCulture != value)
                    {
                        var js = (IJSInProcessRuntime)JSRuntime;
                        js.InvokeVoid("cultureInfo.set", value.Name);

                        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
                    }
                }
    }
     private void OnSelected(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string,Cultures> e)
    {
        switch ((string)e.Value)
        {
            case "en-US":
                this.cultureIndex = 0;
                break;
            case "de":
                this.cultureIndex = 1;
                break;
            case "fr":
                this.cultureIndex = 2;
                break;
            case "ar":
                this.cultureIndex = 3;
                break;
            case "zh":
                this.cultureIndex = 4;
                break;
        }
        Culture = new CultureInfo((string)e.Value);
    }
    public class Cultures
    {
        public string Text { get; set; }

        public string Code { get; set; }
    }

    List<Cultures> CultureList = new List<Cultures>
    {
        new Cultures() { Text = "English (en-US)", Code = "en-US" },
        new Cultures() { Text = "German (de)", Code = "de" },
        new Cultures() { Text = "French (fr)", Code = "fr" },
        new Cultures() { Text = "Arabic (ar)", Code = "ar" },
        new Cultures() { Text = "Chinese (zh)", Code = "zh" },
    };
}
