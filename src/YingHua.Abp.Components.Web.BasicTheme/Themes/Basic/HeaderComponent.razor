@inject IJSRuntime JsRuntime;
@using Volo.Abp.Ui.Branding
@inject IBrandingProvider BrandingProvider
@using Syncfusion.Blazor.Buttons;
@using YingHua.Abp.SyncfusionUI
<div id='sample-header' class="sb-header e-view" role="banner">
    <SfToolbar>
        <ToolbarItems>
            <ToolbarItem PrefixIcon="e-tbar-menu-icon tb-icons" TooltipText="Menu" OnClick="Toggle"></ToolbarItem>
            <ToolbarItem Align="@ItemAlign.Left">
                <Template>
                    <Branding></Branding>
                </Template>
            </ToolbarItem>
            <ToolbarItem PrefixIcon="e-tbar-search-icon tb-icons" TooltipText="Search" Align="@ItemAlign.Right">
            </ToolbarItem>
            <ToolbarItem PrefixIcon="e-tbar-settings-icon tb-icons" TooltipText="Popup" Align="@ItemAlign.Right">
            </ToolbarItem>
        </ToolbarItems>
    </SfToolbar>
    @* <div class='sb-header-left sb-left sb-table'> *@
    @*     <div class='sb-header-item sb-table-cell'> *@
    @*         <div id="sb-toggle-left" @onclick="OnToggleClick" @onclick:stopPropagation="true" role="button" tabindex="0" *@
    @*              class="sb-icons toggle-active sb-icon-hamburger " *@
    @*              style="padding-left:20px" *@
    @*              aria-label="toggle all controls navigation" *@
    @*              title="切换"></div> *@
    @*     </div> *@
    @*     $1$ <div class="sb-header-splitter sb-download-splitter"></div> #1# *@
    @*     <div class='sb-header-item sb-table-cell sb-download-container' id="sb-header-text" style="padding-left:20px"> *@
    @*         <a  href="/"> *@
    @*             @if (!BrandingProvider.LogoUrl.IsNullOrWhiteSpace()) *@
    @*             { *@
    @*                 <img src="@BrandingProvider.LogoUrl" alt="@BrandingProvider.AppName"> *@
    @*             } *@
    @*             @BrandingProvider.AppName *@
    @*         </a> *@
    @*     </div> *@
    @* </div> *@
    @* <div class='sb-header-right sb-right sb-table'> *@
    @* *@
    @*     <div class="sb-header-item sb-table-cell"> *@
    @*         <div id="header-theme-switcher" role="button" tabindex="0" title='Change theme of sample browser'> *@
    @*             $1$ <DropDownComponent DataSource="@SampleUtils.ThemeData" DefaultValue="CHOOSE THEME" OnSelect="OnThemeChange"> #1# *@
    @*             $1$     <ItemTemplate> #1# *@
    @*             $1$         @if (currentTheme == context.ID) #1# *@
    @*             $1$         { #1# *@
    @*             $1$             <span class="sb-icons sf-theme-selection-icon"></span> #1# *@
    @*             $1$         } #1# *@
    @*             $1$         <span>@context.Text</span> #1# *@
    @*             $1$     </ItemTemplate> #1# *@
    @*             $1$ </DropDownComponent> #1# *@
    @*         </div> *@
    @*     </div> *@
    @* *@
    @*     $1$ <div class='sb-header-item sb-table-cell sb-search-container'> #1# *@
    @*     $1$     <div class="@searchClass" role="button" tabindex="0" aria-label="toggle sample search" title="Toggle sample search" @onclick="@OnSearchRender"> #1# *@
    @*     $1$         <span class="sb-settings sb-icons sb-icon-search"></span> #1# *@
    @*     $1$     </div> #1# *@
    @*     $1$ </div> #1# *@
    @*     <div class='sb-header-item sb-table-cell sb-download-container'> *@
    @*         <a href='javascript:void();' rel="noopener"> *@
    @*             <button id='setting' class='sb-github-btn'> *@
    @*                 <div class="sb-icons sb-icon-settings-preferences" title="Explore in Github"></div> *@
    @*             </button> *@
    @*         </a> *@
    @*     </div> *@
    @*     $1$ <div class='sb-header-item sb-table-cell sb-settings-container'> #1# *@
    @*     $1$     <div class='@preferenceClass' role="button" tabindex="0" aria-label="toggle settings menu" title="Toggle sample browser preferences" @onclick="@OnPreferenceClick"> #1# *@
    @*     $1$         <span class='sb-settings sb-icons sb-icon-settings-preferences'></span> #1# *@
    @*     $1$     </div> #1# *@
    @*     $1$     $2$ <Preferences @ref="@preferenceRef"></Preferences> #2# #1# *@
    @*     $1$ </div> #1# *@
    @* *@
    @*     <div class='sb-header-item sb-table-cell sb-download-container'> *@
    @*         <a href='https://github.com/syncfusion/blazor-samples' target="_blank" rel="noopener"> *@
    @*             <button id='github' class='sb-github-btn'> *@
    @*                 <div class="sb-icons github-logo" title="Explore in Github"></div> *@
    @*             </button> *@
    @*         </a> *@
    @*     </div> *@
    @* *@
    @*     $1$ <div class="sb-header-splitter sb-download-splitter"></div> #1# *@
    @*     $1$ <div class='sb-header-item sb-table-cell sb-download-container'> #1# *@
    @*     $1$     <a href='https://www.syncfusion.com/downloads/blazor/' target="_blank" rel="noopener"> #1# *@
    @*     $1$         <button id='download-now' class='sb-download-btn'> #1# *@
    @*     $1$             <span class='sb-download-text'>FREE TRIAL</span> #1# *@
    @*     $1$         </button> #1# *@
    @*     $1$     </a> #1# *@
    @*     $1$ </div> #1# *@
    @*     $1$ <div class="sb-header-item sb-table-cell sb-header-settings sb-icons" @onclick="@OnRightToggleClick" @onclick:stopPropagation="true" role="button"></div> #1# *@
    @* </div> *@
</div>
@code {
    private string searchClass { get; set; }
    private string currentTheme { get; set; }
    private string preferenceClass { get; set; }
    private bool isPreferenceClicked { get; set; }
    public bool SidebarToggle = false;
    public async void Toggle()
    {
        SidebarToggle = !SidebarToggle;
       await OnToggleClick.InvokeAsync(this);
    }
    // private Preferences preferenceRef { get; set; }
    /// <summary>
    /// Triggers event callback on left toggle button action.
    /// </summary>
    [Parameter]
    public EventCallback OnToggleClick { get; set; }
    /// <summary>
    /// Triggers event callback on right toggle button action in device rendering.
    /// </summary>
    [Parameter]
    public EventCallback OnRightToggleClick { get; set; }
    private async Task OnSearchRender()
    {
        // await Layout.ShowSearchLayout(true);
    }

    private void OnPreferenceClick()
    {
    }

    /// <summary>
    /// Hides the preferences popup element.
    /// </summary>
    public void HidePreferences()
    {
        // if (!isPreferenceClicked && !preferenceRef.IsPopupClicked())
        // {
        //     preferenceClass = SampleUtils.RemoveClass(preferenceClass, SampleUtils.ACTIVE_CLASS);
        //     preferenceRef.ShowPopup(false);
        //     StateHasChanged();
        // }
        isPreferenceClicked = false;
    }

}
